name: Test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  doc-str:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
            python-version: '3.10'
      
      - name: install docstr
        run: |
          pip install docstr-coverage
          docstr-coverage pyhrp
          
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11']


    # Steps represent matrix sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
            python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.3
        with:
            virtualenvs-create: false

      - name: Install dependencies
        run: | 
              poetry --version
              poetry install -vv
      
      - name: Run tests
        run: |
              poetry run pytest
  
  coverage:
    
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
            python-version: '3.10'
      
      - name: Install Poetry
        uses: snok/install-poetry@v1.3.3
        with:
            virtualenvs-create: false
      
      - name: Install DeepSource
        run: | 
              curl https://deepsource.io/cli | sh
              # export DEEPSOURCE_DSN=${{ secrets.DEEPSOURCE_DSN }}
      
      - name: Install dependencies
        run: | 
              poetry --version
              poetry install -vv
      
      - name: Run tests
        run: |
              export DEEPSOURCE_DSN=${{ secrets.DEEPSOURCE_DSN }}
              poetry run pytest --cache-clear --cov=./ tests --cov-report xml
              ./bin/deepsource report --analyzer test-coverage --key python --value-file ./coverage.xml   
